"DTL. Теги, наследование."



Цель: синтаксис и инструменты DTL (Языка динамических шаблонов) на практике.

Задача "Сила DTL":
Смысл заключается в проведении аналогии между применением DTL и его отсутствием в разработке.


Подготовка:
Для решения этой задачи, вам понадобятся шаблоны и представления из предыдущего задания.
Все шаблоны из предыдущей задачи скопируйте в новую директорию templates/fourth_task.
Создайте новый шаблон 'menu.html' в директории templates/fourth_task.
Создайте приложение task4, перенесите в него представления из task3 и переназначьте пути к копиям шаблонов.
В urls.py сделайте те же импорты представлений, что и с task3, только из task4. Маршрутизацию в urls.py менять не придётся, т.к. названия представлений остались те же. Импорты из task3 убрать.
Подключите приложение task4 к проекту.
Запустите сервер, у вас должны отобразится те же страницы с тем же содержимым. Если этого не произошло, проверьте все предыдущие пункты.

Изменения в представлениях:
В представлении где вы использовали context измените словарь следующим образом: {'first': ''Atomic Heart", 'second': "Cyberpunk 2077" } -> {'games': ['Atomic Heart", "Cyberpunk 2077"]}. Т.е. вместо передачи нескольких значений будет передаваться один единый список из этих значений.

Изменения в шаблонах:

В новый шаблон 'menu.html' перенесите меню выбора с главной страницы и сделайте этот шаблон родительским для остальных скопированных шаблонов. В этом шаблоне написать блоки:
a) pagename - в который будут передаваться заголовки страниц.
b) menu - где будут написаны пункты вашего меню. Этот блок должен оставаться неизменным в шаблонах наследниках.
c) content - где будет располагаться контент страницы
Остальные шаблоны будут наследоваться при помощи extends от 'menu.html' и меняться будет только заголовок страницы и содержание, меню всегда будет одно и то же.
В шаблоне, где используется context создавайте список при помощи цикла for.
Сам шаблон 'menu.html' самостоятельно не используется ни в одном шаблоне.

Так должны выглядеть ваши страницы:

1.Главная страница:

2.Первая доп. страница (Магазин):

3.Вторая доп. страница (Корзина):

Особое внимание уделите ссылкам в шаблонах. Так как ссылки есть на каждой странице, нужно указывать абсолютный маршрут(путь).



Решение

https://github.com/sofiamilich/DjangoUrban/blob/master/UrbanDjango/task4/views.py
https://github.com/sofiamilich/DjangoUrban/tree/master/UrbanDjango/templates/fourth_task